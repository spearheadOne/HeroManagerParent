plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "$springBootVersion"
    id "io.freefair.lombok" version "$lombokVersion"
    id 'com.google.cloud.tools.jib' version "$jibVersion"
}

apply plugin: "java"
apply plugin: "io.spring.dependency-management"


group = 'org.abondar.industrial'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-validation")

    implementation("org.flywaydb:flyway-core:$flywayVersion")
    implementation("org.flywaydb:flyway-mysql:$flywayVersion")

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion")
    implementation ("io.micrometer:micrometer-core")
    implementation("com.mysql:mysql-connector-j:$mysqlVersion")
    implementation ("net.logstash.logback:logstash-logback-encoder:$encoderVersion")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("com.github.ben-manes.caffeine:caffeine")
    runtimeOnly("com.h2database:h2")

    testImplementation("org.springframework.boot:spring-boot-starter-test")

    testImplementation("org.testcontainers:junit-jupiter:$testConVersion")
    testImplementation("org.testcontainers:mysql:$testConVersion")

}

test {
    useJUnitPlatform{
        excludeTags "integration"
    }
}

def integrationTest = tasks.register("integrationTest",Test){
    useJUnitPlatform{
        includeTags "integration"
    }
}

jib {
    from {
        //image = "eclipse-temurin:17-jre"
        image = "ghcr.io/graalvm/jdk-community:22"
    }
    to {
        image = "$imageName:$project.version"

        auth {
            username = "$dockerhubUser"
            password = "$dockerhubPass"
        }
    }

    container {
        mainClass = "org.abondar.industrial.heromanager.HeroManagerApplication"
        jvmFlags = ["-Dspring.profiles.active=docker"]
        ports = ["8080"]
    }

}